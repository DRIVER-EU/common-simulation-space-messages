// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen.exe, version 0.9.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace eu.driver.model.sim.support
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	public partial class AggregationUnit : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"AggregationUnit\",\"namespace\":\"eu.driver.model.sim.suppor" +
				"t\",\"fields\":[{\"name\":\"id\",\"doc\":\"Unique identifier of the aggregation update\",\"t" +
				"ype\":\"string\"},{\"name\":\"map\",\"doc\":\"Map containing key-value pairs, all with uni" +
				"que keys: key – unique identifier of the unit; value – specific aggregated unit " +
				"properties\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"AggrUnit\",\"na" +
				"mespace\":\"eu.driver.model.sim.support.aggr\",\"fields\":[{\"name\":\"items\",\"doc\":\"Opt" +
				"ional list of items that belong to the unit\",\"default\":null,\"type\":[\"null\",{\"typ" +
				"e\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Item\",\"namespace\":\"eu.driver.model.s" +
				"im.entity\",\"fields\":[{\"name\":\"id\",\"doc\":\"Unique identifier of the item\",\"type\":\"" +
				"string\"},{\"name\":\"location\",\"doc\":\"Location of the item\",\"type\":{\"type\":\"record\"" +
				",\"name\":\"Location\",\"namespace\":\"eu.driver.model.sim.support\",\"fields\":[{\"name\":\"" +
				"latitude\",\"doc\":\"In decimal degrees, ranging from [-90, 90] where 0 is the equat" +
				"or\",\"type\":\"double\"},{\"name\":\"longitude\",\"doc\":\"In decimal degrees, ranging from" +
				" (-180, 180] where 0 is the Prime Meridian (line going through the geographic no" +
				"rth, Greenwich, and the geographic south)\",\"type\":\"double\"},{\"name\":\"altitude\",\"" +
				"doc\":\"Optional in meters, where 0 is the surface of the WGS84-based ellipsoid\",\"" +
				"default\":null,\"type\":[\"null\",\"double\"]}]}},{\"name\":\"orientation\",\"doc\":\"Optional" +
				" orientation of the item\",\"default\":null,\"type\":[\"null\",{\"type\":\"record\",\"name\":" +
				"\"Orientation\",\"namespace\":\"eu.driver.model.sim.support\",\"fields\":[{\"name\":\"yaw\"," +
				"\"doc\":\"In decimal degrees, ranging from [0, 360) where 0 is pointing towards the" +
				" geographic north. The yaw value is applied in a clockwise rotation over the ite" +
				"m’s heading/yaw-axis. A yaw value of 90 makes the item face east, while a yaw of" +
				" 270 makes it face west\",\"type\":\"double\"},{\"name\":\"pitch\",\"doc\":\"In decimal degr" +
				"ees, ranging from [-90, 90] where 0 is perpendicular to the line between the ite" +
				"m’s location and the centre of the WGS84-based ellipsoid. The pitch value is app" +
				"lied in a counter-clockwise rotation over the item’s pitch-axis. A pitch value o" +
				"f 45 makes the item face 45 degrees upwards, while a pitch of -20 makes it face " +
				"20 degrees downwards\",\"type\":\"double\"},{\"name\":\"roll\",\"doc\":\"In decimal degrees," +
				" ranging from (-180, 180] where 0 is perpendicular to the line between the item’" +
				"s location and the centre of the WGS84-based ellipsoid. The roll value is applie" +
				"d in a clockwise rotation over the item’s roll/bank-axis. A roll value of 45 mak" +
				"es the item roll 45 degrees to the right, while a roll of -50 makes it roll 50 d" +
				"egrees to the left\",\"type\":\"double\"}]}]},{\"name\":\"velocity\",\"doc\":\"Optional velo" +
				"city of the item\",\"default\":null,\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Velocit" +
				"y\",\"namespace\":\"eu.driver.model.sim.support\",\"fields\":[{\"name\":\"yaw\",\"doc\":\"In d" +
				"ecimal degrees, ranging from [0, 360) where 0 is pointing towards the geographic" +
				" north. The yaw value is applied in a clockwise rotation over the item’s heading" +
				"/yaw-axis. A yaw value of 90 makes the item face east, while a yaw of 270 makes " +
				"it face west\",\"type\":\"double\"},{\"name\":\"pitch\",\"doc\":\"In decimal degrees, rangin" +
				"g from [-90, 90] where 0 is perpendicular to the line between the item’s locatio" +
				"n and the centre of the WGS84-based ellipsoid. The pitch value is applied in a c" +
				"ounter-clockwise rotation over the item’s pitch-axis. A pitch value of 45 makes " +
				"the item face 45 degrees upwards, while a pitch of -20 makes it face 20 degrees " +
				"downwards\",\"type\":\"double\"},{\"name\":\"magnitude\",\"doc\":\"In meter per seconds, ran" +
				"ging from [0, infinity) where 0 is standing still relative to the earth’s rotati" +
				"on\",\"type\":\"double\"}]}]},{\"name\":\"name\",\"doc\":\"Optional name of the item\",\"defau" +
				"lt\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"type\",\"doc\":\"Optional type of the it" +
				"em\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"owner\",\"doc\":\"Optional uni" +
				"que identifier of the connected application owning the item\",\"default\":null,\"typ" +
				"e\":[\"null\",\"string\"]},{\"name\":\"timestamp\",\"doc\":\"Optional UNIX Epoch time in mil" +
				"liseconds marking the time the update was performed\",\"default\":null,\"type\":[\"nul" +
				"l\",\"long\"],\"logicalType\":\"timestamp-millis\"},{\"name\":\"tags\",\"doc\":\"Optional map " +
				"containing item specific information: key – unique name of the specific property" +
				"; value – value of that property\",\"default\":null,\"type\":[\"null\",{\"type\":\"map\",\"v" +
				"alues\":\"string\"}]}]}}]},{\"name\":\"name\",\"doc\":\"Optional name of the unit\",\"defaul" +
				"t\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"tags\",\"doc\":\"Optional map containing " +
				"unit specific information: key – unique name of the specific property; value – v" +
				"alue of that property\",\"default\":null,\"type\":[\"null\",{\"type\":\"map\",\"values\":\"str" +
				"ing\"}]},{\"name\":\"location\",\"doc\":\"Optional location of the unit\",\"default\":null," +
				"\"type\":[\"null\",\"eu.driver.model.sim.support.Location\"]},{\"name\":\"orientation\",\"d" +
				"oc\":\"Optional orientation of the unit\",\"default\":null,\"type\":[\"null\",\"eu.driver." +
				"model.sim.support.Orientation\"]},{\"name\":\"velocity\",\"doc\":\"Optional velocity of " +
				"the unit\",\"default\":null,\"type\":[\"null\",\"eu.driver.model.sim.support.Velocity\"]}" +
				"]}}},{\"name\":\"timestamp\",\"doc\":\"Optional UNIX Epoch time in milliseconds marking" +
				" the time the aggregated update was performed\",\"default\":null,\"type\":[\"null\",\"lo" +
				"ng\"],\"logicalType\":\"timestamp-millis\"}],\"_comment\":\"\"}");
		/// <summary>
		/// Unique identifier of the aggregation update
		/// </summary>
		private string _id;
		/// <summary>
		/// Map containing key-value pairs, all with unique keys: key – unique identifier of the unit; value – specific aggregated unit properties
		/// </summary>
		private IDictionary<string,eu.driver.model.sim.support.aggr.AggrUnit> _map;
		/// <summary>
		/// Optional UNIX Epoch time in milliseconds marking the time the aggregated update was performed
		/// </summary>
		private System.Nullable<long> _timestamp;
		public virtual Schema Schema
		{
			get
			{
				return AggregationUnit._SCHEMA;
			}
		}
		/// <summary>
		/// Unique identifier of the aggregation update
		/// </summary>
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				this._id = value;
			}
		}
		/// <summary>
		/// Map containing key-value pairs, all with unique keys: key – unique identifier of the unit; value – specific aggregated unit properties
		/// </summary>
		public IDictionary<string,eu.driver.model.sim.support.aggr.AggrUnit> map
		{
			get
			{
				return this._map;
			}
			set
			{
				this._map = value;
			}
		}
		/// <summary>
		/// Optional UNIX Epoch time in milliseconds marking the time the aggregated update was performed
		/// </summary>
		public System.Nullable<long> timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				this._timestamp = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.id;
			case 1: return this.map;
			case 2: return this.timestamp;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.id = (System.String)fieldValue; break;
			case 1: this.map = (IDictionary<string,eu.driver.model.sim.support.aggr.AggrUnit>)fieldValue; break;
			case 2: this.timestamp = (System.Nullable<long>)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
