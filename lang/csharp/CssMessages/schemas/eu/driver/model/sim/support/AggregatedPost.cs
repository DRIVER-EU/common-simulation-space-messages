// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen.exe, version 0.9.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace eu.driver.model.sim.support
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	public partial class AggregatedPost : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"AggregatedPost\",\"namespace\":\"eu.driver.model.sim.support" +
				"\",\"fields\":[{\"name\":\"body\",\"doc\":\"Body text of the post\",\"default\":null,\"type\":[" +
				"\"null\",\"string\"]},{\"name\":\"header\",\"doc\":\"Optional header information of the pos" +
				"t\",\"default\":null,\"type\":[\"null\",{\"type\":\"record\",\"name\":\"AggregatedHeader\",\"nam" +
				"espace\":\"eu.driver.model.sim.support\",\"fields\":[{\"name\":\"from\",\"doc\":\"Sender of " +
				"the post\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"date\",\"doc\":\"UNIX Ep" +
				"och time in milliseconds marking the time the post was published/updated\",\"defau" +
				"lt\":null,\"type\":[\"null\",\"long\"],\"logicalType\":\"timestamp-millis\"},{\"name\":\"to\",\"" +
				"doc\":\"Optional list of recipients of the post\",\"default\":null,\"type\":[\"null\",{\"t" +
				"ype\":\"array\",\"items\":\"string\"}]},{\"name\":\"cc\",\"doc\":\"Optional list of recipients" +
				" in carbon copy of the post\",\"default\":null,\"type\":[\"null\",{\"type\":\"array\",\"item" +
				"s\":\"string\"}]},{\"name\":\"bcc\",\"doc\":\"Optional list of recipients in blind carbon " +
				"copy of the post\",\"default\":null,\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"" +
				"}]},{\"name\":\"subject\",\"doc\":\"Optional subject of the post\",\"default\":null,\"type\"" +
				":[\"null\",\"string\"]},{\"name\":\"intro\",\"doc\":\"Optional introductory text of the pos" +
				"t\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"attachments\",\"doc\":\"Optiona" +
				"l map of (references to) attachments inside the post: key – unique reference to " +
				"the attachment (e.g. URI) or complete string-encoded attachment; value – media t" +
				"ype of the attachment (e.g. .pdf, .png, .zip)\",\"default\":null,\"type\":[\"null\",{\"t" +
				"ype\":\"map\",\"values\":\"string\"}]},{\"name\":\"location\",\"doc\":\"Optional location of t" +
				"he sender of the post\",\"default\":null,\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Lo" +
				"cation\",\"namespace\":\"eu.driver.model.sim.support\",\"fields\":[{\"name\":\"latitude\",\"" +
				"doc\":\"In decimal degrees, ranging from [-90, 90] where 0 is the equator\",\"type\":" +
				"\"double\"},{\"name\":\"longitude\",\"doc\":\"In decimal degrees, ranging from (-180, 180" +
				"] where 0 is the Prime Meridian (line going through the geographic north, Greenw" +
				"ich, and the geographic south)\",\"type\":\"double\"},{\"name\":\"altitude\",\"doc\":\"Optio" +
				"nal in meters, where 0 is the surface of the WGS84-based ellipsoid, or another a" +
				"greed upon common ground level (specified inside the configuration guidelines). " +
				"A positive number indicates a location outside the ellipsoid (or above the groun" +
				"d level), while a negative number indicates a location inside the ellipsoid (or " +
				"below the ground level). If an altitude is not provided, it is presumed that the" +
				" location is at the ground level of the provided latitude and longitude coordina" +
				"tes\",\"default\":null,\"type\":[\"null\",\"double\"]}]}]}]}]},{\"name\":\"name\",\"doc\":\"Opti" +
				"onal name of the post\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"type\",\"" +
				"doc\":\"Optional type of the post\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name" +
				"\":\"owner\",\"doc\":\"Optional unique case-insensitive identifier of the connected ap" +
				"plication owning the post\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"tim" +
				"estamp\",\"doc\":\"Optional UNIX Epoch time in milliseconds marking the time the upd" +
				"ate was performed\",\"default\":null,\"type\":[\"null\",\"long\"],\"logicalType\":\"timestam" +
				"p-millis\"},{\"name\":\"tags\",\"doc\":\"Optional map containing post specific informati" +
				"on: key – unique name of the specific property; value – value of that property\"," +
				"\"default\":null,\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}]}]}");
		/// <summary>
		/// Body text of the post
		/// </summary>
		private string _body;
		/// <summary>
		/// Optional header information of the post
		/// </summary>
		private eu.driver.model.sim.support.AggregatedHeader _header;
		/// <summary>
		/// Optional name of the post
		/// </summary>
		private string _name;
		/// <summary>
		/// Optional type of the post
		/// </summary>
		private string _type;
		/// <summary>
		/// Optional unique case-insensitive identifier of the connected application owning the post
		/// </summary>
		private string _owner;
		/// <summary>
		/// Optional UNIX Epoch time in milliseconds marking the time the update was performed
		/// </summary>
		private System.Nullable<long> _timestamp;
		/// <summary>
		/// Optional map containing post specific information: key – unique name of the specific property; value – value of that property
		/// </summary>
		private IDictionary<string,System.String> _tags;
		public virtual Schema Schema
		{
			get
			{
				return AggregatedPost._SCHEMA;
			}
		}
		/// <summary>
		/// Body text of the post
		/// </summary>
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				this._body = value;
			}
		}
		/// <summary>
		/// Optional header information of the post
		/// </summary>
		public eu.driver.model.sim.support.AggregatedHeader header
		{
			get
			{
				return this._header;
			}
			set
			{
				this._header = value;
			}
		}
		/// <summary>
		/// Optional name of the post
		/// </summary>
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				this._name = value;
			}
		}
		/// <summary>
		/// Optional type of the post
		/// </summary>
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				this._type = value;
			}
		}
		/// <summary>
		/// Optional unique case-insensitive identifier of the connected application owning the post
		/// </summary>
		public string owner
		{
			get
			{
				return this._owner;
			}
			set
			{
				this._owner = value;
			}
		}
		/// <summary>
		/// Optional UNIX Epoch time in milliseconds marking the time the update was performed
		/// </summary>
		public System.Nullable<long> timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				this._timestamp = value;
			}
		}
		/// <summary>
		/// Optional map containing post specific information: key – unique name of the specific property; value – value of that property
		/// </summary>
		public IDictionary<string,System.String> tags
		{
			get
			{
				return this._tags;
			}
			set
			{
				this._tags = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.body;
			case 1: return this.header;
			case 2: return this.name;
			case 3: return this.type;
			case 4: return this.owner;
			case 5: return this.timestamp;
			case 6: return this.tags;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.body = (System.String)fieldValue; break;
			case 1: this.header = (eu.driver.model.sim.support.AggregatedHeader)fieldValue; break;
			case 2: this.name = (System.String)fieldValue; break;
			case 3: this.type = (System.String)fieldValue; break;
			case 4: this.owner = (System.String)fieldValue; break;
			case 5: this.timestamp = (System.Nullable<long>)fieldValue; break;
			case 6: this.tags = (IDictionary<string,System.String>)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
