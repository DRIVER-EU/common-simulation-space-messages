// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen.exe, version 0.9.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace eu.driver.model.sim.entity
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	public partial class FeatureCollection : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"FeatureCollection\",\"namespace\":\"eu.driver.model.sim.enti" +
				"ty\",\"fields\":[{\"name\":\"id\",\"doc\":\"Unique case-insensitive identifier of the feat" +
				"ure collection\",\"type\":\"string\"},{\"name\":\"type\",\"default\":\"FeatureCollection\",\"t" +
				"ype\":{\"type\":\"enum\",\"name\":\"FeatureCollectionType\",\"namespace\":\"eu.driver.model." +
				"sim.support.geojson\",\"symbols\":[\"FeatureCollection\"]}},{\"name\":\"features\",\"defau" +
				"lt\":null,\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Feature" +
				"\",\"namespace\":\"eu.driver.model.sim.support.geojson\",\"fields\":[{\"name\":\"type\",\"de" +
				"fault\":\"Feature\",\"type\":{\"type\":\"enum\",\"name\":\"FeatureType\",\"namespace\":\"eu.driv" +
				"er.model.sim.support.geojson\",\"symbols\":[\"Feature\"]}},{\"name\":\"geometry\",\"doc\":\"" +
				"The geometry (as defined by the GeoJSON standard): Point – a point; MultiPoint –" +
				" a collection of points; LineString – a collection of points forming a line; Mul" +
				"tiLineString – a collection of lines; Polygon – a collection of points forming a" +
				"n area; MultiPolygon – a collection of areas; GeometryCollection – a collection " +
				"of any of the types above\",\"type\":[{\"type\":\"record\",\"name\":\"Point\",\"namespace\":\"" +
				"eu.driver.model.sim.support.geojson.geometry\",\"fields\":[{\"name\":\"type\",\"default\"" +
				":\"Point\",\"type\":{\"type\":\"enum\",\"name\":\"PointType\",\"namespace\":\"eu.driver.model.s" +
				"im.support.geojson.geometry\",\"symbols\":[\"Point\"]}},{\"name\":\"coordinates\",\"type\":" +
				"{\"type\":\"array\",\"items\":\"double\"}}]},{\"type\":\"record\",\"name\":\"MultiPoint\",\"names" +
				"pace\":\"eu.driver.model.sim.support.geojson.geometry\",\"fields\":[{\"name\":\"type\",\"d" +
				"efault\":\"MultiPoint\",\"type\":{\"type\":\"enum\",\"name\":\"MultiPointType\",\"namespace\":\"" +
				"eu.driver.model.sim.support.geojson.geometry\",\"symbols\":[\"MultiPoint\"]}},{\"name\"" +
				":\"coordinates\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":\"double\"}}" +
				"}]},{\"type\":\"record\",\"name\":\"LineString\",\"namespace\":\"eu.driver.model.sim.suppor" +
				"t.geojson.geometry\",\"fields\":[{\"name\":\"type\",\"default\":\"LineString\",\"type\":{\"typ" +
				"e\":\"enum\",\"name\":\"LineStringType\",\"namespace\":\"eu.driver.model.sim.support.geojs" +
				"on.geometry\",\"symbols\":[\"LineString\"]}},{\"name\":\"coordinates\",\"type\":{\"type\":\"ar" +
				"ray\",\"items\":{\"type\":\"array\",\"items\":\"double\"}}}]},{\"type\":\"record\",\"name\":\"Mult" +
				"iLineString\",\"namespace\":\"eu.driver.model.sim.support.geojson.geometry\",\"fields\"" +
				":[{\"name\":\"type\",\"default\":\"MultiLineString\",\"type\":{\"type\":\"enum\",\"name\":\"Multi" +
				"LineStringType\",\"namespace\":\"eu.driver.model.sim.support.geojson.geometry\",\"symb" +
				"ols\":[\"MultiLineString\"]}},{\"name\":\"coordinates\",\"type\":{\"type\":\"array\",\"items\":" +
				"{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":\"double\"}}}}]},{\"type\":\"record\"," +
				"\"name\":\"Polygon\",\"namespace\":\"eu.driver.model.sim.support.geojson.geometry\",\"fie" +
				"lds\":[{\"name\":\"type\",\"default\":\"Polygon\",\"type\":{\"type\":\"enum\",\"name\":\"PolygonTy" +
				"pe\",\"namespace\":\"eu.driver.model.sim.support.geojson.geometry\",\"symbols\":[\"Polyg" +
				"on\"]}},{\"name\":\"coordinates\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"ite" +
				"ms\":\"double\"}}}]},{\"type\":\"record\",\"name\":\"MultiPolygon\",\"namespace\":\"eu.driver." +
				"model.sim.support.geojson.geometry\",\"fields\":[{\"name\":\"type\",\"default\":\"MultiPol" +
				"ygon\",\"type\":{\"type\":\"enum\",\"name\":\"MultiPolygonType\",\"namespace\":\"eu.driver.mod" +
				"el.sim.support.geojson.geometry\",\"symbols\":[\"MultiPolygon\"]}},{\"name\":\"coordinat" +
				"es\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"item" +
				"s\":\"double\"}}}}]}]},{\"name\":\"properties\",\"doc\":\"Optional feature specific proper" +
				"ties (as defined by the GeoJSON standard)\",\"default\":null,\"type\":[\"null\",{\"type\"" +
				":\"record\",\"name\":\"Properties\",\"namespace\":\"eu.driver.model.sim.support.geojson\"," +
				"\"fields\":[{\"name\":\"id\",\"doc\":\"Unique case-insensitive identifier of the feature\"" +
				",\"type\":\"string\"},{\"name\":\"name\",\"doc\":\"Optional name of the feature\",\"default\":" +
				"null,\"type\":[\"null\",\"string\"]},{\"name\":\"description\",\"doc\":\"Optional description" +
				" of the feature\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"type\",\"doc\":\"" +
				"Optional type of the feature\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"" +
				"tags\",\"doc\":\"Optional map containing feature specific information: key – unique " +
				"name of the specific property; value – value of that property\",\"default\":null,\"t" +
				"ype\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}]},{\"name\":\"orientation\",\"doc\":\"Opt" +
				"ional orientation of the feature\",\"default\":null,\"type\":[\"null\",{\"type\":\"record\"" +
				",\"name\":\"Orientation\",\"namespace\":\"eu.driver.model.sim.support\",\"fields\":[{\"name" +
				"\":\"yaw\",\"doc\":\"In decimal degrees, ranging from [0, 360) where 0 is pointing tow" +
				"ards the geographic north. The yaw value is applied in a clockwise rotation over" +
				" the item’s heading/yaw-axis. A yaw value of 90 makes the item face east, while " +
				"a yaw of 270 makes it face west\",\"type\":\"double\"},{\"name\":\"pitch\",\"doc\":\"In deci" +
				"mal degrees, ranging from [-90, 90] where 0 is perpendicular to the line crossin" +
				"g the item’s location and the centre of the WGS84-based ellipsoid. The pitch val" +
				"ue is applied in a counter-clockwise rotation over the item’s pitch-axis. A pitc" +
				"h value of 45 makes the item face 45 degrees upwards, while a pitch of -20 makes" +
				" it face 20 degrees downwards\",\"type\":\"double\"},{\"name\":\"roll\",\"doc\":\"In decimal" +
				" degrees, ranging from (-180, 180] where 0 is perpendicular to the line crossing" +
				" the item’s location and the centre of the WGS84-based ellipsoid. The roll value" +
				" is applied in a clockwise rotation over the item’s roll/bank-axis. A roll value" +
				" of 45 makes the item roll 45 degrees to the right, while a roll of -50 makes it" +
				" roll 50 degrees to the left\",\"type\":\"double\"}]}]},{\"name\":\"entities\",\"doc\":\"Opt" +
				"ional list of entity identifiers that are at this feature\",\"default\":null,\"type\"" +
				":[\"null\",{\"type\":\"array\",\"items\":\"string\"}]},{\"name\":\"address\",\"doc\":\"Optional a" +
				"ddress information of the feature\",\"default\":null,\"type\":[\"null\",{\"type\":\"record" +
				"\",\"name\":\"Address\",\"namespace\":\"eu.driver.model.sim.support\",\"fields\":[{\"name\":\"" +
				"street\",\"doc\":\"Optional street name\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"" +
				"name\":\"houseNumber\",\"doc\":\"Optional house number\",\"default\":null,\"type\":[\"null\"," +
				"\"int\"]},{\"name\":\"houseLetter\",\"doc\":\"Optional house letter\",\"default\":null,\"type" +
				"\":[\"null\",\"string\"]},{\"name\":\"postalCode\",\"doc\":\"Optional postal code\",\"default\"" +
				":null,\"type\":[\"null\",\"string\"]},{\"name\":\"city\",\"doc\":\"Optional name of the city\"" +
				",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"state\",\"doc\":\"Optional name o" +
				"f the state or province\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"count" +
				"ry\",\"doc\":\"Optional name of the country\",\"default\":null,\"type\":[\"null\",\"string\"]" +
				"},{\"name\":\"tags\",\"doc\":\"Optional map containing address specific information: ke" +
				"y – unique name of the specific property; value – value of that property\",\"defau" +
				"lt\":null,\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}]}]}]},{\"name\":\"title\",\"" +
				"doc\":\"Optional title of the feature (as defined by the simplestyle specification" +
				")\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"markerSize\",\"doc\":\"Optional" +
				" size of the style marker (as defined by the simplestyle specification)\",\"defaul" +
				"t\":null,\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"MarkerSize\",\"namespace\":\"eu.driver" +
				".model.sim.support\",\"symbols\":[\"small\",\"medium\",\"large\"]}]},{\"name\":\"markerSymbo" +
				"l\",\"doc\":\"Optional symbol to display in the center of the style marker (as defin" +
				"ed by the simplestyle specification). Allowed values include an Icon ID, an inte" +
				"ger 0 through 9, a lowercase character a through z\",\"default\":null,\"type\":[\"null" +
				"\",\"string\"]},{\"name\":\"markerColor\",\"doc\":\"Optional color of the style marker (as" +
				" defined by the simplestyle specification). This value should be a string-encode" +
				"d hexadecimal value for the red, green and blue intensity of the desired color (" +
				"in that order)\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"stroke\",\"doc\":" +
				"\"Optional color of a line as part of a GeoJSON geometry (as defined by the simpl" +
				"estyle specification). This value should be a string-encoded hexadecimal value f" +
				"or the red, green and blue intensity of the desired color (in that order)\",\"defa" +
				"ult\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"strokeOpacity\",\"doc\":\"Optional opac" +
				"ity of the line as part of a GeoJSON geometry (as defined by the simplestyle spe" +
				"cification), ranging from [0, 1]\",\"default\":null,\"type\":[\"null\",\"float\"]},{\"name" +
				"\":\"strokeWidth\",\"doc\":\"The width of the line as part of a GeoJSON geometry (as d" +
				"efined by the simplestyle specification), ranging from [0, infinity)\",\"default\":" +
				"null,\"type\":[\"null\",\"float\"]},{\"name\":\"fill\",\"doc\":\"Optional color of the GeoJSO" +
				"N geometry (as defined by the simplestyle specification). This value should be a" +
				" string-encoded hexadecimal value for the red, green and blue intensity of the d" +
				"esired color (in that order)\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"" +
				"fillOpacity\",\"doc\":\"Optional opacity of the GeoJSON geometry (as defined by the " +
				"simplestyle specification), ranging from [0, 1]\",\"default\":null,\"type\":[\"null\",\"" +
				"float\"]}]}]},{\"name\":\"bbox\",\"doc\":\"Optional bounding box around the feature in t" +
				"he following order [west, south, east, north]. Length(bbox)=2xn, where n is the " +
				"number of dimensions represented in the contained geometry, with all axes of the" +
				" most south-westerly point followed by all axes of the more north-easterly point" +
				". The axes order of a bbox follows the axes order of the geometry. The bbox valu" +
				"es define shapes with edges that follow lines of constant longitude, latitude, a" +
				"nd elevation\",\"default\":null,\"type\":[\"null\",{\"type\":\"array\",\"items\":\"double\"}]}]" +
				"}}]},{\"name\":\"name\",\"doc\":\"Optional name of the feature collection\",\"default\":nu" +
				"ll,\"type\":[\"null\",\"string\"]},{\"name\":\"description\",\"doc\":\"Optional description o" +
				"f the feature collection\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"owne" +
				"r\",\"doc\":\"Optional unique case-insensitive identifier of the connected applicati" +
				"on owning the feature collection\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"nam" +
				"e\":\"timestamp\",\"doc\":\"Optional UNIX Epoch time in milliseconds marking the time " +
				"the update was performed\",\"default\":null,\"type\":[\"null\",\"long\"],\"logicalType\":\"t" +
				"imestamp-millis\"},{\"name\":\"tags\",\"doc\":\"Optional map containing feature collecti" +
				"on specific information: key – unique name of the specific property; value – val" +
				"ue of that property\",\"default\":null,\"type\":[\"null\",{\"type\":\"map\",\"values\":\"strin" +
				"g\"}]},{\"name\":\"bbox\",\"doc\":\"Optional bounding box around the feature collection " +
				"in the following order [west, south, east, north]. Length(bbox)=2xn, where n is " +
				"the number of dimensions represented in the contained geometries, with all axes " +
				"of the most south-westerly point followed by all axes of the more north-easterly" +
				" point. The axes order of a bbox follows the axes order of the geometries. The b" +
				"box values define shapes with edges that follow lines of constant longitude, lat" +
				"itude, and elevation\",\"default\":null,\"type\":[\"null\",{\"type\":\"array\",\"items\":\"dou" +
				"ble\"}]}]}");
		/// <summary>
		/// Unique case-insensitive identifier of the feature collection
		/// </summary>
		private string _id;
		private eu.driver.model.sim.support.geojson.FeatureCollectionType _type;
		private IList<eu.driver.model.sim.support.geojson.Feature> _features;
		/// <summary>
		/// Optional name of the feature collection
		/// </summary>
		private string _name;
		/// <summary>
		/// Optional description of the feature collection
		/// </summary>
		private string _description;
		/// <summary>
		/// Optional unique case-insensitive identifier of the connected application owning the feature collection
		/// </summary>
		private string _owner;
		/// <summary>
		/// Optional UNIX Epoch time in milliseconds marking the time the update was performed
		/// </summary>
		private System.Nullable<long> _timestamp;
		/// <summary>
		/// Optional map containing feature collection specific information: key – unique name of the specific property; value – value of that property
		/// </summary>
		private IDictionary<string,System.String> _tags;
		/// <summary>
		/// Optional bounding box around the feature collection in the following order [west, south, east, north]. Length(bbox)=2xn, where n is the number of dimensions represented in the contained geometries, with all axes of the most south-westerly point followed by all axes of the more north-easterly point. The axes order of a bbox follows the axes order of the geometries. The bbox values define shapes with edges that follow lines of constant longitude, latitude, and elevation
		/// </summary>
		private IList<System.Double> _bbox;
		public virtual Schema Schema
		{
			get
			{
				return FeatureCollection._SCHEMA;
			}
		}
		/// <summary>
		/// Unique case-insensitive identifier of the feature collection
		/// </summary>
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				this._id = value;
			}
		}
		public eu.driver.model.sim.support.geojson.FeatureCollectionType type
		{
			get
			{
				return this._type;
			}
			set
			{
				this._type = value;
			}
		}
		public IList<eu.driver.model.sim.support.geojson.Feature> features
		{
			get
			{
				return this._features;
			}
			set
			{
				this._features = value;
			}
		}
		/// <summary>
		/// Optional name of the feature collection
		/// </summary>
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				this._name = value;
			}
		}
		/// <summary>
		/// Optional description of the feature collection
		/// </summary>
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				this._description = value;
			}
		}
		/// <summary>
		/// Optional unique case-insensitive identifier of the connected application owning the feature collection
		/// </summary>
		public string owner
		{
			get
			{
				return this._owner;
			}
			set
			{
				this._owner = value;
			}
		}
		/// <summary>
		/// Optional UNIX Epoch time in milliseconds marking the time the update was performed
		/// </summary>
		public System.Nullable<long> timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				this._timestamp = value;
			}
		}
		/// <summary>
		/// Optional map containing feature collection specific information: key – unique name of the specific property; value – value of that property
		/// </summary>
		public IDictionary<string,System.String> tags
		{
			get
			{
				return this._tags;
			}
			set
			{
				this._tags = value;
			}
		}
		/// <summary>
		/// Optional bounding box around the feature collection in the following order [west, south, east, north]. Length(bbox)=2xn, where n is the number of dimensions represented in the contained geometries, with all axes of the most south-westerly point followed by all axes of the more north-easterly point. The axes order of a bbox follows the axes order of the geometries. The bbox values define shapes with edges that follow lines of constant longitude, latitude, and elevation
		/// </summary>
		public IList<System.Double> bbox
		{
			get
			{
				return this._bbox;
			}
			set
			{
				this._bbox = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.id;
			case 1: return this.type;
			case 2: return this.features;
			case 3: return this.name;
			case 4: return this.description;
			case 5: return this.owner;
			case 6: return this.timestamp;
			case 7: return this.tags;
			case 8: return this.bbox;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.id = (System.String)fieldValue; break;
			case 1: this.type = (eu.driver.model.sim.support.geojson.FeatureCollectionType)fieldValue; break;
			case 2: this.features = (IList<eu.driver.model.sim.support.geojson.Feature>)fieldValue; break;
			case 3: this.name = (System.String)fieldValue; break;
			case 4: this.description = (System.String)fieldValue; break;
			case 5: this.owner = (System.String)fieldValue; break;
			case 6: this.timestamp = (System.Nullable<long>)fieldValue; break;
			case 7: this.tags = (IDictionary<string,System.String>)fieldValue; break;
			case 8: this.bbox = (IList<System.Double>)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
