// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen.exe, version 0.9.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace eu.driver.model.sim.config
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	public partial class TimeControl : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse(@"{""type"":""record"",""name"":""TimeControl"",""namespace"":""eu.driver.model.sim.config"",""fields"":[{""name"":""command"",""doc"":""The type of command to switch the state of the time-service."",""type"":{""type"":""enum"",""name"":""TimeCommand"",""namespace"":""eu.driver.model.sim.config"",""symbols"":[""Init"",""Start"",""Pause"",""Update"",""Stop"",""Reset""]}},{""name"":""simulationTime"",""doc"":""Optional UNIX Epoch time in milliseconds marking the fictive date and time the session should run with."",""default"":null,""type"":[""null"",""long""],""logicalType"":""timestamp-millis""},{""name"":""simulationSpeed"",""doc"":""Optional speed factor to run the simulation. The range of this speed factor is [0, infinity)."",""default"":null,""type"":[""null"",""float""]}]}");
		/// <summary>
		/// The type of command to switch the state of the time-service.
		/// </summary>
		private eu.driver.model.sim.config.TimeCommand _command;
		/// <summary>
		/// Optional UNIX Epoch time in milliseconds marking the fictive date and time the session should run with.
		/// </summary>
		private System.Nullable<long> _simulationTime;
		/// <summary>
		/// Optional speed factor to run the simulation. The range of this speed factor is [0, infinity).
		/// </summary>
		private System.Nullable<float> _simulationSpeed;
		public virtual Schema Schema
		{
			get
			{
				return TimeControl._SCHEMA;
			}
		}
		/// <summary>
		/// The type of command to switch the state of the time-service.
		/// </summary>
		public eu.driver.model.sim.config.TimeCommand command
		{
			get
			{
				return this._command;
			}
			set
			{
				this._command = value;
			}
		}
		/// <summary>
		/// Optional UNIX Epoch time in milliseconds marking the fictive date and time the session should run with.
		/// </summary>
		public System.Nullable<long> simulationTime
		{
			get
			{
				return this._simulationTime;
			}
			set
			{
				this._simulationTime = value;
			}
		}
		/// <summary>
		/// Optional speed factor to run the simulation. The range of this speed factor is [0, infinity).
		/// </summary>
		public System.Nullable<float> simulationSpeed
		{
			get
			{
				return this._simulationSpeed;
			}
			set
			{
				this._simulationSpeed = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.command;
			case 1: return this.simulationTime;
			case 2: return this.simulationSpeed;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.command = (eu.driver.model.sim.config.TimeCommand)fieldValue; break;
			case 1: this.simulationTime = (System.Nullable<long>)fieldValue; break;
			case 2: this.simulationSpeed = (System.Nullable<float>)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
