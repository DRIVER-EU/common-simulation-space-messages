// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen.exe, version 0.9.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace eu.driver.model.sim.support
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	public partial class AggregatedFeatureCollection : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"AggregatedFeatureCollection\",\"namespace\":\"eu.driver.mode" +
				"l.sim.support\",\"fields\":[{\"name\":\"type\",\"default\":\"FeatureCollection\",\"type\":{\"t" +
				"ype\":\"enum\",\"name\":\"FeatureCollectionType\",\"namespace\":\"eu.driver.model.sim.supp" +
				"ort.geojson\",\"symbols\":[\"FeatureCollection\"]}},{\"name\":\"features\",\"default\":null" +
				",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AggregatedFeatu" +
				"re\",\"namespace\":\"eu.driver.model.sim.support.geojson\",\"fields\":[{\"name\":\"type\",\"" +
				"default\":\"Feature\",\"type\":{\"type\":\"enum\",\"name\":\"FeatureType\",\"namespace\":\"eu.dr" +
				"iver.model.sim.support.geojson\",\"symbols\":[\"Feature\"]}},{\"name\":\"geometry\",\"doc\"" +
				":\"The geometry (as defined by the GeoJSON standard): Point – a point; MultiPoint" +
				" – a collection of points; LineString – a collection of points forming a line; M" +
				"ultiLineString – a collection of lines; Polygon – a collection of points forming" +
				" an area; MultiPolygon – a collection of areas; GeometryCollection – a collectio" +
				"n of any of the types above\",\"default\":null,\"type\":[\"null\",{\"type\":\"record\",\"nam" +
				"e\":\"Point\",\"namespace\":\"eu.driver.model.sim.support.geojson.geometry\",\"fields\":[" +
				"{\"name\":\"type\",\"default\":\"Point\",\"type\":{\"type\":\"enum\",\"name\":\"PointType\",\"names" +
				"pace\":\"eu.driver.model.sim.support.geojson.geometry\",\"symbols\":[\"Point\"]}},{\"nam" +
				"e\":\"coordinates\",\"type\":{\"type\":\"array\",\"items\":\"double\"}}]},{\"type\":\"record\",\"n" +
				"ame\":\"MultiPoint\",\"namespace\":\"eu.driver.model.sim.support.geojson.geometry\",\"fi" +
				"elds\":[{\"name\":\"type\",\"default\":\"MultiPoint\",\"type\":{\"type\":\"enum\",\"name\":\"Multi" +
				"PointType\",\"namespace\":\"eu.driver.model.sim.support.geojson.geometry\",\"symbols\":" +
				"[\"MultiPoint\"]}},{\"name\":\"coordinates\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"a" +
				"rray\",\"items\":\"double\"}}}]},{\"type\":\"record\",\"name\":\"LineString\",\"namespace\":\"eu" +
				".driver.model.sim.support.geojson.geometry\",\"fields\":[{\"name\":\"type\",\"default\":\"" +
				"LineString\",\"type\":{\"type\":\"enum\",\"name\":\"LineStringType\",\"namespace\":\"eu.driver" +
				".model.sim.support.geojson.geometry\",\"symbols\":[\"LineString\"]}},{\"name\":\"coordin" +
				"ates\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":\"double\"}}}]},{\"typ" +
				"e\":\"record\",\"name\":\"MultiLineString\",\"namespace\":\"eu.driver.model.sim.support.ge" +
				"ojson.geometry\",\"fields\":[{\"name\":\"type\",\"default\":\"MultiLineString\",\"type\":{\"ty" +
				"pe\":\"enum\",\"name\":\"MultiLineStringType\",\"namespace\":\"eu.driver.model.sim.support" +
				".geojson.geometry\",\"symbols\":[\"MultiLineString\"]}},{\"name\":\"coordinates\",\"type\":" +
				"{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":\"double\"" +
				"}}}}]},{\"type\":\"record\",\"name\":\"Polygon\",\"namespace\":\"eu.driver.model.sim.suppor" +
				"t.geojson.geometry\",\"fields\":[{\"name\":\"type\",\"default\":\"Polygon\",\"type\":{\"type\":" +
				"\"enum\",\"name\":\"PolygonType\",\"namespace\":\"eu.driver.model.sim.support.geojson.geo" +
				"metry\",\"symbols\":[\"Polygon\"]}},{\"name\":\"coordinates\",\"type\":{\"type\":\"array\",\"ite" +
				"ms\":{\"type\":\"array\",\"items\":\"double\"}}}]},{\"type\":\"record\",\"name\":\"MultiPolygon\"" +
				",\"namespace\":\"eu.driver.model.sim.support.geojson.geometry\",\"fields\":[{\"name\":\"t" +
				"ype\",\"default\":\"MultiPolygon\",\"type\":{\"type\":\"enum\",\"name\":\"MultiPolygonType\",\"n" +
				"amespace\":\"eu.driver.model.sim.support.geojson.geometry\",\"symbols\":[\"MultiPolygo" +
				"n\"]}},{\"name\":\"coordinates\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"item" +
				"s\":{\"type\":\"array\",\"items\":\"double\"}}}}]}]},{\"name\":\"properties\",\"doc\":\"Optional" +
				" feature specific properties (as defined by the GeoJSON standard)\",\"default\":nul" +
				"l,\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Properties\",\"namespace\":\"eu.driver.mod" +
				"el.sim.support.geojson\",\"fields\":[{\"name\":\"id\",\"doc\":\"Unique case-insensitive id" +
				"entifier of the feature\",\"type\":\"string\"},{\"name\":\"name\",\"doc\":\"Optional name of" +
				" the feature\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"description\",\"do" +
				"c\":\"Optional description of the feature\",\"default\":null,\"type\":[\"null\",\"string\"]" +
				"},{\"name\":\"type\",\"doc\":\"Optional type of the feature\",\"default\":null,\"type\":[\"nu" +
				"ll\",\"string\"]},{\"name\":\"tags\",\"doc\":\"Optional map containing feature specific in" +
				"formation: key – unique name of the specific property; value – value of that pro" +
				"perty\",\"default\":null,\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}]},{\"name\":" +
				"\"orientation\",\"doc\":\"Optional orientation of the feature\",\"default\":null,\"type\":" +
				"[\"null\",{\"type\":\"record\",\"name\":\"Orientation\",\"namespace\":\"eu.driver.model.sim.s" +
				"upport\",\"fields\":[{\"name\":\"yaw\",\"doc\":\"In decimal degrees, ranging from [0, 360)" +
				" where 0 is pointing towards the geographic north. The yaw value is applied in a" +
				" clockwise rotation over the item’s heading/yaw-axis. A yaw value of 90 makes th" +
				"e item face east, while a yaw of 270 makes it face west\",\"type\":\"double\"},{\"name" +
				"\":\"pitch\",\"doc\":\"In decimal degrees, ranging from [-90, 90] where 0 is perpendic" +
				"ular to the line crossing the item’s location and the centre of the WGS84-based " +
				"ellipsoid. The pitch value is applied in a counter-clockwise rotation over the i" +
				"tem’s pitch-axis. A pitch value of 45 makes the item face 45 degrees upwards, wh" +
				"ile a pitch of -20 makes it face 20 degrees downwards\",\"type\":\"double\"},{\"name\":" +
				"\"roll\",\"doc\":\"In decimal degrees, ranging from (-180, 180] where 0 is perpendicu" +
				"lar to the line crossing the item’s location and the centre of the WGS84-based e" +
				"llipsoid. The roll value is applied in a clockwise rotation over the item’s roll" +
				"/bank-axis. A roll value of 45 makes the item roll 45 degrees to the right, whil" +
				"e a roll of -50 makes it roll 50 degrees to the left\",\"type\":\"double\"}]}]},{\"nam" +
				"e\":\"entities\",\"doc\":\"Optional list of entity identifiers that are at this featur" +
				"e\",\"default\":null,\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}]},{\"name\":\"ad" +
				"dress\",\"doc\":\"Optional address information of the feature\",\"default\":null,\"type\"" +
				":[\"null\",{\"type\":\"record\",\"name\":\"Address\",\"namespace\":\"eu.driver.model.sim.supp" +
				"ort\",\"fields\":[{\"name\":\"street\",\"doc\":\"Optional street name\",\"default\":null,\"typ" +
				"e\":[\"null\",\"string\"]},{\"name\":\"houseNumber\",\"doc\":\"Optional house number\",\"defau" +
				"lt\":null,\"type\":[\"null\",\"int\"]},{\"name\":\"houseLetter\",\"doc\":\"Optional house lett" +
				"er\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"postalCode\",\"doc\":\"Optiona" +
				"l postal code\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"city\",\"doc\":\"Op" +
				"tional name of the city\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"state" +
				"\",\"doc\":\"Optional name of the state or province\",\"default\":null,\"type\":[\"null\",\"" +
				"string\"]},{\"name\":\"country\",\"doc\":\"Optional name of the country\",\"default\":null," +
				"\"type\":[\"null\",\"string\"]},{\"name\":\"tags\",\"doc\":\"Optional map containing address " +
				"specific information: key – unique name of the specific property; value – value " +
				"of that property\",\"default\":null,\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}" +
				"]}]}]},{\"name\":\"title\",\"doc\":\"Optional title of the feature (as defined by the s" +
				"implestyle specification)\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"mar" +
				"kerSize\",\"doc\":\"Optional size of the style marker (as defined by the simplestyle" +
				" specification)\",\"default\":null,\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"MarkerSize" +
				"\",\"namespace\":\"eu.driver.model.sim.support\",\"symbols\":[\"small\",\"medium\",\"large\"]" +
				"}]},{\"name\":\"markerSymbol\",\"doc\":\"Optional symbol to display in the center of th" +
				"e style marker (as defined by the simplestyle specification). Allowed values inc" +
				"lude an Icon ID, an integer 0 through 9, a lowercase character a through z\",\"def" +
				"ault\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"markerColor\",\"doc\":\"Optional color" +
				" of the style marker (as defined by the simplestyle specification). This value s" +
				"hould be a string-encoded hexadecimal value for the red, green and blue intensit" +
				"y of the desired color (in that order)\",\"default\":null,\"type\":[\"null\",\"string\"]}" +
				",{\"name\":\"stroke\",\"doc\":\"Optional color of a line as part of a GeoJSON geometry " +
				"(as defined by the simplestyle specification). This value should be a string-enc" +
				"oded hexadecimal value for the red, green and blue intensity of the desired colo" +
				"r (in that order)\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"strokeOpaci" +
				"ty\",\"doc\":\"Optional opacity of the line as part of a GeoJSON geometry (as define" +
				"d by the simplestyle specification), ranging from [0, 1]\",\"default\":null,\"type\":" +
				"[\"null\",\"float\"]},{\"name\":\"strokeWidth\",\"doc\":\"The width of the line as part of " +
				"a GeoJSON geometry (as defined by the simplestyle specification), ranging from [" +
				"0, infinity)\",\"default\":null,\"type\":[\"null\",\"float\"]},{\"name\":\"fill\",\"doc\":\"Opti" +
				"onal color of the GeoJSON geometry (as defined by the simplestyle specification)" +
				". This value should be a string-encoded hexadecimal value for the red, green and" +
				" blue intensity of the desired color (in that order)\",\"default\":null,\"type\":[\"nu" +
				"ll\",\"string\"]},{\"name\":\"fillOpacity\",\"doc\":\"Optional opacity of the GeoJSON geom" +
				"etry (as defined by the simplestyle specification), ranging from [0, 1]\",\"defaul" +
				"t\":null,\"type\":[\"null\",\"float\"]}]}]},{\"name\":\"bbox\",\"doc\":\"Optional bounding box" +
				" around the feature in the following order [west, south, east, north]. Length(bb" +
				"ox)=2xn, where n is the number of dimensions represented in the contained geomet" +
				"ry, with all axes of the most south-westerly point followed by all axes of the m" +
				"ore north-easterly point. The axes order of a bbox follows the axes order of the" +
				" geometry. The bbox values define shapes with edges that follow lines of constan" +
				"t longitude, latitude, and elevation\",\"default\":null,\"type\":[\"null\",{\"type\":\"arr" +
				"ay\",\"items\":\"double\"}]}]}}]},{\"name\":\"name\",\"doc\":\"Optional name of the feature " +
				"collection\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"description\",\"doc\"" +
				":\"Optional description of the feature collection\",\"default\":null,\"type\":[\"null\"," +
				"\"string\"]},{\"name\":\"owner\",\"doc\":\"Optional unique case-insensitive identifier of" +
				" the connected application owning the feature collection\",\"default\":null,\"type\":" +
				"[\"null\",\"string\"]},{\"name\":\"timestamp\",\"doc\":\"Optional UNIX Epoch time in millis" +
				"econds marking the time the update was performed\",\"default\":null,\"type\":[\"null\"," +
				"\"long\"],\"logicalType\":\"timestamp-millis\"},{\"name\":\"tags\",\"doc\":\"Optional map con" +
				"taining feature collection specific information: key – unique name of the specif" +
				"ic property; value – value of that property\",\"default\":null,\"type\":[\"null\",{\"typ" +
				"e\":\"map\",\"values\":\"string\"}]},{\"name\":\"bbox\",\"doc\":\"Optional bounding box around" +
				" the feature collection in the following order [west, south, east, north]. Lengt" +
				"h(bbox)=2xn, where n is the number of dimensions represented in the contained ge" +
				"ometries, with all axes of the most south-westerly point followed by all axes of" +
				" the more north-easterly point. The axes order of a bbox follows the axes order " +
				"of the geometries. The bbox values define shapes with edges that follow lines of" +
				" constant longitude, latitude, and elevation\",\"default\":null,\"type\":[\"null\",{\"ty" +
				"pe\":\"array\",\"items\":\"double\"}]}]}");
		private eu.driver.model.sim.support.geojson.FeatureCollectionType _type;
		private IList<eu.driver.model.sim.support.geojson.AggregatedFeature> _features;
		/// <summary>
		/// Optional name of the feature collection
		/// </summary>
		private string _name;
		/// <summary>
		/// Optional description of the feature collection
		/// </summary>
		private string _description;
		/// <summary>
		/// Optional unique case-insensitive identifier of the connected application owning the feature collection
		/// </summary>
		private string _owner;
		/// <summary>
		/// Optional UNIX Epoch time in milliseconds marking the time the update was performed
		/// </summary>
		private System.Nullable<long> _timestamp;
		/// <summary>
		/// Optional map containing feature collection specific information: key – unique name of the specific property; value – value of that property
		/// </summary>
		private IDictionary<string,System.String> _tags;
		/// <summary>
		/// Optional bounding box around the feature collection in the following order [west, south, east, north]. Length(bbox)=2xn, where n is the number of dimensions represented in the contained geometries, with all axes of the most south-westerly point followed by all axes of the more north-easterly point. The axes order of a bbox follows the axes order of the geometries. The bbox values define shapes with edges that follow lines of constant longitude, latitude, and elevation
		/// </summary>
		private IList<System.Double> _bbox;
		public virtual Schema Schema
		{
			get
			{
				return AggregatedFeatureCollection._SCHEMA;
			}
		}
		public eu.driver.model.sim.support.geojson.FeatureCollectionType type
		{
			get
			{
				return this._type;
			}
			set
			{
				this._type = value;
			}
		}
		public IList<eu.driver.model.sim.support.geojson.AggregatedFeature> features
		{
			get
			{
				return this._features;
			}
			set
			{
				this._features = value;
			}
		}
		/// <summary>
		/// Optional name of the feature collection
		/// </summary>
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				this._name = value;
			}
		}
		/// <summary>
		/// Optional description of the feature collection
		/// </summary>
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				this._description = value;
			}
		}
		/// <summary>
		/// Optional unique case-insensitive identifier of the connected application owning the feature collection
		/// </summary>
		public string owner
		{
			get
			{
				return this._owner;
			}
			set
			{
				this._owner = value;
			}
		}
		/// <summary>
		/// Optional UNIX Epoch time in milliseconds marking the time the update was performed
		/// </summary>
		public System.Nullable<long> timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				this._timestamp = value;
			}
		}
		/// <summary>
		/// Optional map containing feature collection specific information: key – unique name of the specific property; value – value of that property
		/// </summary>
		public IDictionary<string,System.String> tags
		{
			get
			{
				return this._tags;
			}
			set
			{
				this._tags = value;
			}
		}
		/// <summary>
		/// Optional bounding box around the feature collection in the following order [west, south, east, north]. Length(bbox)=2xn, where n is the number of dimensions represented in the contained geometries, with all axes of the most south-westerly point followed by all axes of the more north-easterly point. The axes order of a bbox follows the axes order of the geometries. The bbox values define shapes with edges that follow lines of constant longitude, latitude, and elevation
		/// </summary>
		public IList<System.Double> bbox
		{
			get
			{
				return this._bbox;
			}
			set
			{
				this._bbox = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.type;
			case 1: return this.features;
			case 2: return this.name;
			case 3: return this.description;
			case 4: return this.owner;
			case 5: return this.timestamp;
			case 6: return this.tags;
			case 7: return this.bbox;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.type = (eu.driver.model.sim.support.geojson.FeatureCollectionType)fieldValue; break;
			case 1: this.features = (IList<eu.driver.model.sim.support.geojson.AggregatedFeature>)fieldValue; break;
			case 2: this.name = (System.String)fieldValue; break;
			case 3: this.description = (System.String)fieldValue; break;
			case 4: this.owner = (System.String)fieldValue; break;
			case 5: this.timestamp = (System.Nullable<long>)fieldValue; break;
			case 6: this.tags = (IDictionary<string,System.String>)fieldValue; break;
			case 7: this.bbox = (IList<System.Double>)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
